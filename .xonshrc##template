# Note that type hints cannot be used

byobu attach -t client &> /dev/null
byobu attach -t server &> /dev/null

from nanite import fullpath as fp
from os import getcwd

if getcwd() == "/":
	cd ~

python_ver = "3.8"
home = fp("/home/shadowrylander")
extras = fp(home, ".e")
xtras = fp(extras, "xonsh")
fzf_dir_file = fp(xtras, "fzf_tmux_dir_file.sh")

# source @(fp(xtras, "passwords.sec"))
source @(fp(xtras, "environ.xsh"))
source @(fp(xtras, "functions.xsh"))
source @(fp(xtras, "xontribs.xsh"))
# source-zsh $(fasd --init auto)
# source-zsh @(fp(home, ".nix-profile", "etc", "profile.d", "hm-session-vars.sh"))

{% if yadm.distro == "nixos" %}
source @(fp(xtras, "nixos.xsh"))

# vox create base -p $(which @(f"python{python_ver}")) 2> /dev/null
# vox enter base 2> /dev/null

# aliases["act"] = _alacritty_change_themes
# aliases["evim"] = lambda args, stdin=None: $(emacsclient --socket-name=spacemacsd -t @(args))
# aliases["hgsetup"] = hgsetup
aliases["-"] = "pushd"
aliases[".."] = "cd .."
aliases["."] = "la ."
aliases["ba"] = "byobu attach"
aliases["bd"] = "byobu detach"
aliases["bda"] = "byobu detach-client -a"
aliases["c"] = "clear"
aliases["compile-header"] = _compile_header
aliases["compile-link"] = _compile_link
aliases["compile-only"] = _compile_only
aliases["compile"] = _compile
aliases["da"] = _direnv_allow
aliases["emd"] = "/usr/bin/emacs --bg-daemon=spacemacsd"
aliases["ex"] = "vim '~/.xonshrc##template'"
aliases["kemd"] = "emacsclient --socket-name=spacemacsd -e '(kill-emacs)'"
aliases["la"] = _la
aliases["md"] = lambda args, stdin=None: $(mkdir -p @(args))
aliases["mdg"] = _mdg
aliases["mosh"] = lambda args, stdin=None: $($(which -s mosh) --experimental-remote-ip=remote @(args))
aliases["n"] = "exit"
aliases["remd"] = "emacsclient --socket-name=spacemacsd -e '(kill-emacs)' && /usr/bin/emacs --bg-daemon=spacemacsd"
# aliases["ssh"] = _ssh
aliases["sx"] = "yadm alt && source ~/.xonshrc"
aliases["ve"] = lambda args, stdin=None: $(vox enter @(args)) if args else $(vox exit)
aliases["yadm"] = _yadm
aliases["git"] = _git

# fasd aliases
aliases["o"] = lambda args, stdin=None: $(fasd -ae xdg-open @(args)) # quick opening files with xdg-open
aliases["v"] = _fasdv # quick opening files with vim

_fzf_df_alias = "..."
def _fzf(args, stdin=True):
	args = list(args)
	dir_file = $(sh @(fzf_dir_file) @(fp(args.pop(0)))).rstrip()
	if args[0] == _fzf_df_alias:
		_fzf([dir_file] + args[1::])
	else:
		@(args) @(dir_file)
aliases[_fzf_df_alias] = _fzf